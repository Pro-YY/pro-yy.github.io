<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[YangYang's Notes]]></title>
  <link href="http://this.pro-yy.com/atom.xml" rel="self"/>
  <link href="http://this.pro-yy.com/"/>
  <updated>2015-07-29T21:52:17+08:00</updated>
  <id>http://this.pro-yy.com/</id>
  <author>
    <name><![CDATA[杨阳]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shadowsocks Tutorial]]></title>
    <link href="http://this.pro-yy.com/blog/2015/07/29/shadowsocks-tutorial/"/>
    <updated>2015-07-29T19:37:13+08:00</updated>
    <id>http://this.pro-yy.com/blog/2015/07/29/shadowsocks-tutorial</id>
    <content type="html"><![CDATA[<h1>Overview</h1>

<h2>socks5</h2>

<p>Socket Secure (SOCKS) is an Internet protocol that routes network packets between a client and server through a proxy server. SOCKS5 additionally provides authentication so only authorized users may access a server.</p>

<p>Practically, a SOCKS server proxies TCP connections to an arbitrary IP address, and provides a means for UDP packets to be forwarded.SOCKS operates at a lower level than HTTP proxying: SOCKS uses a handshake protocol to inform the proxy software about the connection that the client is trying to make, and then acts as transparently as possible. SOCKS proxies can also forward UDP traffic and work in reverse.</p>

<h2>shadowsocks</h2>

<p><a href="https://github.com/shadowsocks/shadowsocks">Shadowsocks</a> is a fast tunnel proxy that can help bypass firewalls.</p>

<h2>test environment</h2>

<p>Remote VPS OS: Ubuntu-14.04 Server VPS on DigitalOcean</p>

<p>Local Client OS: Ubuntu-14.04 Desktop</p>

<h1>Installation</h1>

<h2>install package</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install python-pip
</span><span class='line'>sudo pip install shadowsocks</span></code></pre></td></tr></table></div></figure>


<h2>remote server</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssserver -k PASSWORD -d start</span></code></pre></td></tr></table></div></figure>


<p>This will run shadowsocks remote server listening at <strong>0.0.0.0:8388</strong></p>

<h2>local server</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sslocal -s VPS -k PASSWORD</span></code></pre></td></tr></table></div></figure>


<p>This will run shadowsocks local server listening at <strong>127.0.0.1:1080</strong></p>

<h1>Client Configuration</h1>

<h2>Web Browser</h2>

<p>Thanks for proxy setting extension like <a href="http://getfoxyproxy.org/">FoxyProxy</a> in Firefox, <a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif">SwitchyOmega</a> in Chrome, socks proxy tunnel can be easily configured.</p>

<p>Choose <strong>socks v5</strong> protocal at localhost:1080, and get it work.</p>

<h2>Curl</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -x socks5h://localhost https://www.google.com</span></code></pre></td></tr></table></div></figure>


<p>Note that we specify protocal as <strong>socks5h</strong> instead of socks5, which means we use the specified SOCKS5 proxy, and let the proxy resolve the host name, otherwise it may not resolve hostname. And port 1080 is by default.</p>

<h2>Nodejs Request</h2>

<p><a href="https://www.npmjs.com/package/request">request</a> utility doesn&rsquo;t support socks proxy by default, so we need <a href="https://www.npmjs.com/package/socks5-http-client">socks5-http-client</a> and <a href="https://www.npmjs.com/package/socks5-https-client">socks5-https-client</a> to create agent.</p>

<figure class='code'><figcaption><span>socks-proxy.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">socks5HttpAgent</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;socks5-http-client/lib/Agent&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">socks5HttpsAgent</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;socks5-https-client/lib/Agent&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">urlString</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">url</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">urlString</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">agentClass</span> <span class="o">=</span> <span class="p">(</span><span class="nx">url</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">===</span> <span class="s1">&#39;https:&#39;</span><span class="p">)</span> <span class="o">?</span> <span class="nx">socks5HttpsAgent</span> <span class="o">:</span> <span class="nx">socks5HttpAgent</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">agentOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">socksHost</span><span class="o">:</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span> <span class="c1">// defaults to localhost</span>
</span><span class='line'>  <span class="nx">socksPort</span><span class="o">:</span> <span class="mi">1080</span>         <span class="c1">// defaults to 1080</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">uri</span><span class="o">:</span> <span class="nx">url</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">agentClass</span><span class="o">:</span> <span class="nx">agentClass</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">agentOptions</span><span class="o">:</span> <span class="nx">agentOptions</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;GET&#39;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="nx">request</span><span class="p">(</span><span class="nx">options</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
</span><span class='line'>  <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">statusCode</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, test it.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>node socks-proxy.js http://www.google.com
</span><span class='line'>node socks-proxy.js https://www.google.com</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Session With Express and Nginx]]></title>
    <link href="http://this.pro-yy.com/blog/2015/07/17/session-with-express-and-nginx/"/>
    <updated>2015-07-17T17:12:56+08:00</updated>
    <id>http://this.pro-yy.com/blog/2015/07/17/session-with-express-and-nginx</id>
    <content type="html"><![CDATA[<h1>为什么一定要持久化存储会话信息</h1>

<p>如果会话信息仅仅存储在内存&hellip;</p>

<ul>
<li>服务器重启，用户将会登出</li>
<li>无法在多个node进程(或集群环境)中共享会话</li>
</ul>


<p>所以，会话(无论是HTTP会话还是Web-Socket会话)都需要在服务器端持久化存储在数据库中，如Redis/Mongo。</p>

<p>环境： Express 4.12.2， Nginx 1.8.0</p>

<h1>Express添加Redis会话存储</h1>

<p>需要的相关库或组件：</p>

<ul>
<li><a href="https://www.npmjs.com/package/connect-redis">connect-redis</a>: Redis会话存储。</li>
<li><a href="https://www.npmjs.com/package/socket.io-redis">socket.io-redis</a>: 多个socket.io进程实例可以彼此触发/广播事件。</li>
</ul>


<figure class='code'><figcaption><span>app.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">socketio</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;socket.io&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">session</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;express-session&#39;</span><span class="p">);</span>           <span class="c1">// 会话支持</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">passport</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;passport&#39;</span><span class="p">);</span>                 <span class="c1">// 身份认证，依赖express-session</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">RedisStore</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;connect-redis&#39;</span><span class="p">)(</span><span class="nx">session</span><span class="p">);</span> <span class="c1">// redis存储，用于持久化会话</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">RedisAdapter</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;socket.io-redis&#39;</span><span class="p">);</span>      <span class="c1">// 存储web-socket的连接</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">mongoose</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;mongoose&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">// ...</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">Server</span><span class="p">(</span><span class="nx">app</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">sio</span> <span class="o">=</span> <span class="nx">socketio</span><span class="p">(</span><span class="nx">server</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>配置Redis会话存储HTTP会话</p>

<figure class='code'><figcaption><span>app.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">sessionMiddleware</span> <span class="o">=</span> <span class="nx">session</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;XXX:sess&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">secret</span><span class="o">:</span> <span class="s1">&#39;XXX&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">proxy</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">resave</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">store</span><span class="o">:</span> <span class="k">new</span> <span class="nx">RedisStore</span><span class="p">(),</span>
</span><span class='line'>  <span class="nx">saveUninitialized</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">cookie</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//secure: true, // only https</span>
</span><span class='line'>    <span class="nx">maxAge</span><span class="o">:</span> <span class="mi">7</span><span class="o">*</span><span class="mi">24</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">1000</span> <span class="c1">// 1 week</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="c1">// 应用会话存储中间件</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">sessionMiddleware</span><span class="p">);</span>
</span><span class='line'><span class="c1">// passport登录认证</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">passport</span><span class="p">.</span><span class="nx">initialize</span><span class="p">());</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">passport</span><span class="p">.</span><span class="nx">session</span><span class="p">());</span>
</span></code></pre></td></tr></table></div></figure>


<p>配置Redis会话存储Web-Socket会话</p>

<figure class='code'><figcaption><span>app.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">sio</span><span class="p">.</span><span class="nx">adapter</span><span class="p">(</span><span class="nx">RedisAdapter</span><span class="p">({</span><span class="nx">host</span><span class="o">:</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span> <span class="nx">port</span><span class="o">:</span> <span class="mi">6379</span><span class="p">}));</span>
</span><span class='line'><span class="c1">// 为socket server添加redis存储的中间件</span>
</span><span class='line'><span class="nx">sio</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">socket</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">sessionMiddleware</span><span class="p">(</span><span class="nx">socket</span><span class="p">.</span><span class="nx">request</span><span class="p">,</span> <span class="nx">socket</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="c1">// 对未登录的用户禁用socket支持</span>
</span><span class='line'><span class="nx">sio</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">socket</span><span class="p">,</span> <span class="nx">next</span><span class="p">){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">passport</span> <span class="o">=</span> <span class="nx">socket</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">session</span><span class="p">.</span><span class="nx">passport</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">passport</span> <span class="o">||</span> <span class="o">!</span><span class="nx">passport</span><span class="p">.</span><span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">logger</span><span class="p">.</span><span class="nx">debug</span><span class="p">(</span><span class="s1">&#39;no socket support without login&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">next</span><span class="p">(</span><span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;Authentication error&#39;</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span> <span class="nx">next</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Nginx配置支持负载均衡</h1>

<p>Web-Socket的连接建立需要同一个tcp连接上的多次握手支持，要求比一般的HTTP会话高一些。
所以为实现多进程的共享会话支持，需要配置支持iphash的upstream。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>upstream nodes {
</span><span class='line'>  ip_hash;
</span><span class='line'>  server localhost:8001;
</span><span class='line'>  server localhost:8002;
</span><span class='line'>  server localhost:8003;
</span><span class='line'>  server localhost:8004;
</span><span class='line'>  keepalive 512;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>server{
</span><span class='line'>  listen 443 ssl;
</span><span class='line'>  server_name example.com;
</span><span class='line'>  location / {
</span><span class='line'>    proxy_set_header Upgrade $http_upgrade;
</span><span class='line'>    proxy_set_header Connection "upgrade";
</span><span class='line'>    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
</span><span class='line'>    proxy_set_header Host $host;
</span><span class='line'>    proxy_http_version 1.1;
</span><span class='line'>    proxy_pass http://nodes;
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>注意，可以用pm2启动多个node服务进程，但必须以fork mode启动，而不是-i的集群方式启动，负载均衡完全交给nginx即可。
如此：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pm2 start -f --name web1 app.js -- 8001
</span><span class='line'>pm2 start -f --name web2 app.js -- 8002
</span><span class='line'>pm2 start -f --name web3 app.js -- 8003
</span><span class='line'>pm2 start -f --name web4 app.js -- 8004</span></code></pre></td></tr></table></div></figure>


<h1>参考资料</h1>

<p><a href="http://socket.io/docs/using-multiple-nodes/">Socket.io doc: using multiple nodes</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Memcache With PHP]]></title>
    <link href="http://this.pro-yy.com/blog/2015/07/16/installing-memcache-with-php/"/>
    <updated>2015-07-16T20:34:27+08:00</updated>
    <id>http://this.pro-yy.com/blog/2015/07/16/installing-memcache-with-php</id>
    <content type="html"><![CDATA[<h1>install memcached</h1>

<p>  OS: Ubuntu-14.04 server</p>

<p>  PHP: 5.6.8 source build</p>

<h2>install memcached with apt-get</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install memcached</span></code></pre></td></tr></table></div></figure>


<h2>verification</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "stats settings" | nc localhost 11211</span></code></pre></td></tr></table></div></figure>


<h1>install memcache php extension</h1>

<h2>download source from pecl</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://pecl.php.net/get/memcache-2.2.7.tgz</span></code></pre></td></tr></table></div></figure>


<h2>install with pecl</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/path/to/php/bin/pecl install /path/to/memcache-2.2.7.tgz</span></code></pre></td></tr></table></div></figure>


<p>There exsists the <em>lib/php/extensions/no-debug-non-zts-XXXXXXX/memcache.so</em></p>

<h2>update the <em>php.ini</em></h2>

<p>add &ldquo;extension=memcache.so&rdquo; to php.ini</p>

<h2>reload php-fpm server</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kill -USR2 $(cat /path/to/php/var/run/php-fpm.pid) # no need sudo</span></code></pre></td></tr></table></div></figure>


<p>Check the php.info page, make sure that memcache section exsists</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog Writing With Octopress 3]]></title>
    <link href="http://this.pro-yy.com/blog/2015/07/15/blog-writing-with-octopress-3/"/>
    <updated>2015-07-15T20:38:31+08:00</updated>
    <id>http://this.pro-yy.com/blog/2015/07/15/blog-writing-with-octopress-3</id>
    <content type="html"><![CDATA[<h1>initialize workspace</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  git clone git@github.com:Pro-YY/pro-yy.github.io.git -b source
</span><span class='line'>  cd pro-yy.github.io/
</span><span class='line'>  git clone git@github.com:Pro-YY/pro-yy.github.io.git -b master _deploy
</span><span class='line'>  bundle install</span></code></pre></td></tr></table></div></figure>


<h1>write post</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  rake new_post["Blog Writing with Octopress 3"]
</span><span class='line'>  vim source/_posts/2015-07-15-blog-writing-with-octopress-3.markdown</span></code></pre></td></tr></table></div></figure>


<h1>preview</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  rake generate
</span><span class='line'>  rake preview</span></code></pre></td></tr></table></div></figure>


<p>preview at <a href="http://localhost:4000">http://localhost:4000</a></p>

<h1>deploy</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  rake deploy</span></code></pre></td></tr></table></div></figure>


<h1>commit source</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  git commit -asm 'new post'
</span><span class='line'>  git push</span></code></pre></td></tr></table></div></figure>


<h1>update octopress</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  git remote add octopress git://github.com/imathis/octopress.git
</span><span class='line'>  git pull octopress master
</span><span class='line'>  bundle install
</span><span class='line'>  rake update_source
</span><span class='line'>  rake update_style</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
